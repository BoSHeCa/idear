{"version":3,"sources":["Components/Pages/Home.jsx","Components/Pages/About.jsx","Components/Pages/NotFound.jsx","Components/Auth/Login.jsx","helper.js","Components/Auth/Profile.jsx","Components/Auth/Register.jsx","Components/Ideas/Ideas.jsx","Components/Ideas/Create.jsx","Components/Nav/Navbars.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","src","alt","Component","About","Container","fluid","Row","Col","md","className","Card","style","width","Body","Img","variant","height","Title","Subtitle","Link","href","target","NotFound","loginSchema","Yup","shape","email","required","password","Login","submitHandle","val","axios","post","then","resp","console","log","status","localStorage","setItem","data","window","location","catch","err","onSubmit","values","initialValues","validationSchema","name","type","placeholder","component","logout","user","removeItem","replace","ideaSchema","min","confirmPassword","oneOf","Profile","state","passwordChange","put","getItem","res","get","setState","this","first_name","last_name","registerSchema","Register","register","newUser","props","history","push","Ideas","api_resp","fetch","json","alignItems","margin","map","all_ideas","key","_id","title","Text","description","moment","createdAt","fromNow","max","Create","handleSubmit","jwtDecode","decode","vals","refs","disc","value","as","Navbars","Navbar","bg","Brand","Toggle","aria-controls","Collapse","id","Nav","usertoken","NavDropdown","Item","onClick","path","exact","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b7549e5.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Home extends Component {\n\n    render() {\n       \n        return (\n            \n           <>\n           \n           <br/>\n           <br/>\n           <br/>\n           <br/>\n\n<h1>Welcome to idear website</h1>\n<br/>\n<br/>\n<br/>\n<h3>idear is platform for tasks</h3>\n<h4>You can add task and other users can do it :)</h4>\n<br/>\n<img src=\"https://6.top4top.net/p_1448t9bxn1.gif\" alt=\"idea\" />\n\n           </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Card, Col, Container } from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\n\nexport default class About extends Component {\n    render() {\n        return (\n            <div>\n                  <br/>\n                  <br/>\n                  <br/>\n               <h3>About us</h3> \n                <br/>\n                <br/>\n\n                <br/>\n\n                <br/>\n\n                <br/>\n\n                <br/>\n\n                <br/>\n\n\n                <Container fluid>\n          <Row>\n                <div>\n                <Col md={6}  className=\"mb-3\">\n                <Card  style={{ width: '18rem' }}>\n  <Card.Body>\n  <Card.Img variant=\"top\" src=\"https://avatars1.githubusercontent.com/u/48391702?s=460&v=4\"   height=\"246\" width=\"246\"/>\n  <br/>  <br/>  \n    <Card.Title>Hamed Alsoubhi</Card.Title>\n    <Card.Subtitle className=\"mb-2 text-muted\">front-end developer</Card.Subtitle>\n    {/* <Card.Text>\n      Some quick example text to build on the card title and make up the bulk of\n      the card's content.\n    </Card.Text> */}\n    <Card.Link href=\"https://github.com/BoSHeCa\"target=\"_blank\">Github</Card.Link>\n    <Card.Link href=\"https://www.linkedin.com/in/ithamed\" target=\"_blank\">Linkedin</Card.Link>\n  </Card.Body>\n</Card>\n</Col>\n</div>\n<div>\n<Col md={6}  className=\"mb-3\">\n<Card style={{ width: '18rem' }}>\n  <Card.Body>\n  \n    <Card.Img variant=\"top\" src=\"https://1.top4top.net/p_1448pg8ss1.jpg\" height=\"246\" width=\"246\"/>\n  <br/>  <br/> \n     <Card.Title>Abdullah Alsharif</Card.Title>\n    <Card.Subtitle className=\"mb-2 text-muted\">back-end developer</Card.Subtitle>\n    {/* <Card.Text>\n      Some quick example text to build on the card title and make up the bulk of\n      the card's content.\n    </Card.Text> */}\n    <Card.Link href=\"https://github.com/aalsharif93\">Github</Card.Link>\n    {/* <Card.Link href=\"#\">Linkedin</Card.Link> */}\n  </Card.Body>\n</Card>\n</Col>\n</div>\n</Row>\n        </Container>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class NotFound extends Component {\n    render() {\n        return (\n            <div>\n                404 NotFound page\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n// import { URL } from '../../helper'\nimport axios from 'axios'\n\nconst loginSchema = Yup.object().shape({\n  email: Yup.string()\n   .email('Please enter a valid email')\n   .required( 'Please enter an email' ),\n  password: Yup.string()\n   .required('Please enter a password')\n });\n\nexport default class Login extends Component {\n\n\n  submitHandle = (val)=>{\n        axios.post(`/users/login`, val)\n        .then(resp => {\n          console.log(resp)\n          if(resp.status === 200){\n              localStorage.setItem(\"usertoken\", resp.data)\n              window.location.href = '/profile'\n              \n          }\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n    render() {\n        return (\n            <div>\n              <Container>\n                Login Page\n                  <Formik \n                    onSubmit={(values) => {\n                          // console.log(values)\n                           this.submitHandle(values)\n                          }}\n                      initialValues={{\n                                      email : '',\n                                      password : ''\n                        }}\n                      validationSchema={loginSchema}>\n                        {(values) => (\n                            <Form>\n                            <div className=\"mb-3\">\n                            <Field\n                                name=\"email\"\n                                type=\"text\"\n                                placeholder=\"email\"\n                                className=\"form-control\" \n                            />\n                            <ErrorMessage\n                                name=\"email\"\n                                component=\"div\"\n                            />\n                            </div>\n                            \n                            <Field\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"******\"\n                                className=\"form-control\" \n                            />\n                            <ErrorMessage\n                                name=\"password\"\n                                component=\"div\"\n                            />\n                            <button type=\"submit\">\n                                Submit\n                            </button>\n                            </Form>\n                        )}\n                        </Formik>\n                </Container>\n        </div>\n\n        )\n    }\n}\n","import jwtDecode from 'jwt-decode';\n\n// export const URL = \"http://localhost:5000\";\n\nexport function decode (){\n\n    let user = jwtDecode(localStorage.getItem('usertoken'))\n    console.log(user)\n    return user._id\n}\n\nexport const logout = (user)=>{\n    localStorage.removeItem('usertoken') // localStorage in the browser\n    window.location.replace(\"/\");\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport {  logout } from '../../helper' \nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport { Container } from 'react-bootstrap';\n\nconst ideaSchema = Yup.object().shape({\n    password: Yup.string()\n     .min(6, 'Please enter more than 6 characters')\n     .required( 'Please enter password' ),\n    confirmPassword : Yup.string()\n     .oneOf([Yup.ref('password'), null], 'Passwords must match')\n   });\n\nexport default class Profile extends Component {\n    state={\n        data:[],\n    }\n\n\n    passwordChange = (password) =>{\n        //make axios call here\n        axios.put(`/users/profile/password`, { password }, { \n            \"headers\": {\n                \"Authorization\" :localStorage.getItem('usertoken')\n            }\n        })\n        .then(res => {\n            console.log(res)\n            if(res.status === 200){\n                logout()\n            }\n        })\n        .catch(err => {\n            console.log(err)\n        })\n        //logout\n    }\n\n\n    componentDidMount(){\n\n        axios.get(`/users/profile/`, { \n            \"headers\": {\n                \"Authorization\" :localStorage.getItem('usertoken')\n            }\n        })\n        .then(data => {\n            console.log(data)\n            this.setState({\n                data:data.data\n            })\n            console.log(this.state)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n    render() {\n        console.log(this.state.password)\n        return (\n            <div>\n                <div>  First name : {this.state.data.first_name} </div>\n                <div>Last name :{this.state.data.last_name}</div>\n                <div>Email :{this.state.data.email}</div>\n                <br/>\n                <Container>\n                <Formik\n                        onSubmit={(values) => {\n                            console.log(values)\n                            console.log(\"submitted..\")\n                            this.passwordChange(values.password)\n                        }}\n                        initialValues={{\n                            password : '',\n                            confirmPassword: ''\n                        }}\n                        validationSchema={ideaSchema}\n                        >\n                        {(values) => (\n                            <Form>\n                          \n                            <Field\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"*****\"\n                                className=\"form-control\" \n                            />\n                            <ErrorMessage\n                                name=\"password\"\n                                component=\"div\"\n                            />\n                            \n                            <Field\n                                name=\"confirmPassword\"\n                                type=\"password\"\n                                placeholder=\"*****\"\n                                className=\"form-control\" \n                            />\n                            <ErrorMessage\n                                name=\"confirmPassword\"\n                                component=\"div\"\n                            />\n                            <button type=\"submit\">\n                                Submit\n                            </button>\n                            </Form>\n                        )}\n                        </Formik>\n                </Container>\n\n                {/* <a href=\"/password\">  Change your password </a> */}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n// import { URL } from '../../helper'\nimport axios from 'axios'\n\nconst registerSchema = Yup.object().shape({\n  first_name: Yup.string()\n  .required('must enter a first name'),\n  last_name: Yup.string()\n  .required('must enter a last name'),\n  email: Yup.string()\n   .email('Please enter a valid email')\n   .required( 'Please enter an email' ),\n  password: Yup.string()\n   .required('Please enter a password')\n });\n\nexport default class Register extends Component {\n\n  register = newUser => {\n    return axios\n      .post(`/users/register`, newUser)\n      .then(res =>{ \n        console.log(res)\n        this.props.history.push(\"/login\");\n      })\n      .catch(err => console.log(err));\n  }\n\n    render() {\n        return (\n            <div>\n              <Container>\n                Register Page\n                <Formik \n                    onSubmit={(values) => {\n                          // console.log(values)\n                           this.register(values)\n                          }}\n                      initialValues={{\n                        first_name:'',  \n                        last_name:'',\n                        email : '',\n                        password : ''\n                        }}\n                      validationSchema={registerSchema}>\n                        {(values) => (\n                            <Form>\n                            <div className=\"mb-3\">\n                            <Field\n                                name=\"first_name\"\n                                type=\"text\"\n                                placeholder=\"First Name\"\n                                className=\"form-control\" \n                            />\n                            <ErrorMessage\n                                name=\"first_name\"\n                                component=\"div\"\n                            />\n                            </div>\n\n                            <div className=\"mb-3\">\n                            <Field\n                                name=\"last_name\"\n                                type=\"text\"\n                                placeholder=\"Last Name\"\n                                className=\"form-control\" \n                            />\n                            <ErrorMessage\n                                name=\"last_name\"\n                                component=\"div\"\n                            />\n                            </div>\n\n                            <div className=\"mb-3\">\n                            <Field\n                                name=\"email\"\n                                type=\"text\"\n                                placeholder=\"email\"\n                                className=\"form-control\" \n                            />\n                            <ErrorMessage\n                                name=\"email\"\n                                component=\"div\"\n                            />\n                            </div>\n                            \n                            <div className=\"mb-3\">\n                            <Field\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"******\"\n                                className=\"form-control\" \n                            />\n                            <ErrorMessage\n                                name=\"password\"\n                                component=\"div\"\n                            />\n                            </div>\n\n                           \n                            <button type=\"submit\">\n                                Submit\n                            </button>\n                            </Form>\n                        )}\n                        </Formik>\n                        </Container>\n          </div>\n\n         \n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\n// import Categories from './Categories'\nimport { Card, Col, Container } from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\n\nexport default class Ideas extends Component {\n  state = {\n    api_resp: []\n  };\n\n  componentDidMount() {\n    fetch(\"/allideas/ideas\")\n      .then(res => res.json())\n      .then(res =>\n        this.setState({\n          api_resp: res\n        })\n      );\n  }\n\n  render() {\n    const { api_resp } = this.state;\n    console.log(api_resp);\n    // all_ideas.title,all_ideas.description\n    return (\n      <div style={{ alignItems: \"center\", margin: \"auto\" }}>\n        <h3>Task to Do !</h3>\n        <h5>This is a random tasks to do , Take one of them and challenge yourself to do it.</h5> \n        <br/>\n        <br/>\n        <Container fluid>\n          <Row>\n            {api_resp.map(all_ideas => \n              (\n                <Col md={3} key={all_ideas._id} className=\"mb-3\">\n                  <Card>\n                    <Card.Body>\n                      <Card.Title>\n                        <b>{all_ideas.title}</b>\n                      </Card.Title>\n                      <Card.Text>\n                      <br/><h5>{all_ideas.description}</h5>\n                        <i className=\"d-block\">\n                        <br/>  <br/> Created by: {\" \"}\n                          {all_ideas.user\n                            ? all_ideas.user.first_name\n                            : \"Anonymous\"}{\" \"}\n                            <br/>\n                            <small>Last updated {moment(all_ideas.createdAt).fromNow()}</small>\n                        </i>\n                      </Card.Text>\n                      <Card.Text></Card.Text>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              )\n            )}\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n// (api_resp != null || api_resp != undefined) ? ):null\n","import React, { Component } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport {   decode} from '../../helper'\n\nconst ideaSchema = Yup.object().shape({\n    title: Yup.string()\n     .min(6, 'Please enter more than 6 characters')\n     .required( 'Please enter title' ),\n    description: Yup.string()\n     .max(160, 'Please enter no more than 160 characters')\n     .required('Please enter a last name')\n   });\n\nexport default class Create extends Component {\n    state = {\n        title : \"\",\n        description : \"\"\n    }\n    \n    onChange\n\n    disc(){\n        const vals = this.refs.disc.value\n        this.setState({ 'disc':vals})\n    }\n\n    handleSubmit = (val) => {\n        \n        val.user = decode() \n\n    \n        axios.post(`/allideas/new/${val.user}`, val)\n        .then(data => {\n            console.log(data)\n            if(data.status === 200){\n                // console.log(\"completed\")\n                this.props.history.push('/Ideas')\n            }\n        })\n        .catch(err => console.log(err))\n    }\n\n    \n    render() {\n        return (\n            <div>\n                <h3>Create Task</h3>\n                \n        <h5>please write good task.</h5> \n                <div>\n                    {/* <form>\n                        <input name=\"title\" />\n\n                    </form> */}\n                    <Container>\n                    <Formik\n                        onSubmit={(values) => {\n                            // console.log(values)\n                            this.handleSubmit(values)\n                        }}\n                        initialValues={{\n                            title : '',\n                            description: ''\n                        }}\n                        validationSchema={ideaSchema}\n                        >\n                        {(values) => (\n                            <Form>\n                            <Field\n                                name=\"title\"\n                                type=\"text\"\n                                placeholder=\"Title of task\"\n                                className=\"form-control\" \n                            />\n                            <ErrorMessage\n                                name=\"title\"\n                                component=\"div\"\n                            />\n                            \n                            <Field\n                                name=\"description\"\n                                as=\"textarea\"\n                                placeholder=\"description of task\"\n                                className=\"form-control\" \n                            />\n                            <ErrorMessage\n                                name=\"description\"\n                                component=\"div\"\n                            />\n                            <button>\n                                Submit\n                            </button>\n                            </Form>\n                        )}\n                        </Formik>\n                    </Container>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport Home from '../Pages/Home'\nimport About from '../Pages/About'\nimport NotFound from '../Pages/NotFound'\nimport Login from '../Auth/Login';\n// import Changepass from '../Auth/Changepass';\nimport Profile from '../Auth/Profile';\nimport Register from '../Auth/Register';\nimport Ideas from '../Ideas/Ideas';\nimport Create from '../Ideas/Create';\nimport {logout} from '../../helper';\n\nexport default class Navbars extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n        <Navbar bg=\"light\">\n    <Navbar.Brand href=\"/\">idear</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n    <Nav className=\"ml-auto\">\n      <Nav.Link href=\"/About\">About</Nav.Link>\n      {!localStorage.usertoken ?     \n<>\n      <Nav.Link href=\"/Login\">Login</Nav.Link>\n      <Nav.Link href=\"/Register\">Register</Nav.Link>\n</>:null}\n {localStorage.usertoken ?     \n<>\n      <Nav.Link href=\"/Ideas\">Tasks</Nav.Link>\n      <Nav.Link href=\"/Create\">Create Task</Nav.Link>\n</>:null}\n\n{localStorage.usertoken ?     \n\n      <NavDropdown title=\"Account\" id=\"basic-nav-dropdown\">\n        <NavDropdown.Item href=\"/Profile\">Profile</NavDropdown.Item>\n        <NavDropdown.Item onClick={logout}>logout</NavDropdown.Item>\n       \n       \n      </NavDropdown>\n :null}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n       \n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/About\" component={About} />\n            <Route path=\"/Register\" component={Register} />\n            <Route path=\"/Login\" component={Login} />\n            {localStorage.usertoken ?\n                <>\n             <Route path=\"/Profile\" component={Profile} />\n            <Route path=\"/Create\" component={Create} />\n            <Route path=\"/Ideas\" exact component={Ideas} />\n            </> :null } \n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport \"./App.css\";\nimport Navbars from \"./Components/Nav/Navbars\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbars />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}